{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\React Playzone\\\\adding-users-with-useReducer\\\\src\\\\store\\\\auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext({\n  isLoggedIn: false,\n  onLogout: () => {},\n  onLogin: (email, password) => {}\n});\nexport const AuthContextProvider = props => {\n  _s();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\n    if (storedUserLoggedInInformation === '1') {\n      setIsLoggedIn(true);\n    }\n  }, []);\n  const logoutHandler = () => {\n    localStorage.removeItem('isLoggedIn');\n    setIsLoggedIn(false);\n  };\n  const loginHandler = () => {\n    localStorage.setItem('isLoggedIn', '1');\n    setIsLoggedIn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isLoggedIn: isLoggedIn,\n      onLogout: logoutHandler,\n      onLogin: loginHandler\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 12\n  }, this);\n};\n_s(AuthContextProvider, \"fKLMlyFH2GMrhNeUDpp+0z1yiCo=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","AuthContext","createContext","isLoggedIn","onLogout","onLogin","email","password","AuthContextProvider","props","setIsLoggedIn","useEffect","storedUserLoggedInInformation","localStorage","getItem","logoutHandler","removeItem","loginHandler","setItem","children"],"sources":["C:/Code/React Playzone/adding-users-with-useReducer/src/store/auth-context.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst AuthContext = React.createContext({\r\n    isLoggedIn: false,\r\n     onLogout: () => {},\r\n     onLogin: (email, password) => {}\r\n});\r\n\r\nexport const AuthContextProvider = (props) => {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n   \r\n    useEffect(() => {\r\n        const storedUserLoggedInInformation = localStorage.getItem('isLoggedIn');\r\n    \r\n        if (storedUserLoggedInInformation === '1') {\r\n          setIsLoggedIn(true);\r\n        }\r\n      }, []);\r\n\r\n      \r\n    const logoutHandler = () => {\r\n        localStorage.removeItem('isLoggedIn');\r\n        setIsLoggedIn(false);\r\n    };\r\n    const loginHandler = () => {\r\n        localStorage.setItem('isLoggedIn', '1');\r\nsetIsLoggedIn(true);\r\n    };\r\n\r\n    return <AuthContext.Provider value={{isLoggedIn: isLoggedIn, onLogout: logoutHandler, onLogin: loginHandler}}>{props.children}</AuthContext.Provider>\r\n};\r\n\r\nexport default AuthContext;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,MAAMC,WAAW,gBAAGF,KAAK,CAACG,aAAa,CAAC;EACpCC,UAAU,EAAE,KAAK;EAChBC,QAAQ,EAAE,MAAM,CAAC,CAAC;EAClBC,OAAO,EAAE,CAACC,KAAK,EAAEC,QAAQ,KAAK,CAAC;AACpC,CAAC,CAAC;AAEF,OAAO,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;EAAA;EAC1C,MAAM,CAACN,UAAU,EAAEO,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnDW,SAAS,CAAC,MAAM;IACZ,MAAMC,6BAA6B,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAExE,IAAIF,6BAA6B,KAAK,GAAG,EAAE;MACzCF,aAAa,CAAC,IAAI,CAAC;IACrB;EACF,CAAC,EAAE,EAAE,CAAC;EAGR,MAAMK,aAAa,GAAG,MAAM;IACxBF,YAAY,CAACG,UAAU,CAAC,YAAY,CAAC;IACrCN,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EACD,MAAMO,YAAY,GAAG,MAAM;IACvBJ,YAAY,CAACK,OAAO,CAAC,YAAY,EAAE,GAAG,CAAC;IAC/CR,aAAa,CAAC,IAAI,CAAC;EACf,CAAC;EAED,oBAAO,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAE;MAACP,UAAU,EAAEA,UAAU;MAAEC,QAAQ,EAAEW,aAAa;MAAEV,OAAO,EAAEY;IAAY,CAAE;IAAA,UAAER,KAAK,CAACU;EAAQ;IAAA;IAAA;IAAA;EAAA,QAAwB;AACzJ,CAAC;AAAC,GAtBWX,mBAAmB;AAAA,KAAnBA,mBAAmB;AAwBhC,eAAeP,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}